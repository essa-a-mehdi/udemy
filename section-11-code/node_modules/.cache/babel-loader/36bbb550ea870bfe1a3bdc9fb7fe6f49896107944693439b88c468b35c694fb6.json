{"ast":null,"code":"var _jsxFileName = \"/Users/essamehdi/Projects/handcoded/expanding-states/src/components/Accordion.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { GoChevronDown, GoChevronLeft } from 'react-icons/go';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Accordion({\n  items\n}) {\n  _s();\n  const [expandedIndex, setExpandedIndex] = useState(-1);\n  const handleClick = nextIndex => {\n    if (expandedIndex === nextIndex) {\n      setExpandedIndex(-1);\n    } else {\n      setExpandedIndex(nextIndex);\n    }\n  };\n\n  // arrow function to create list of  all the items to render with js\n  const renderedItems = items.map((item, index) => {\n    let isExpanded;\n    if (index === expandedIndex) {\n      isExpanded = true;\n    } else {\n      isExpanded = false;\n    }\n    let icon;\n    if (isExpanded) {\n      icon = /*#__PURE__*/_jsxDEV(GoChevronDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    } else {\n      icon = /*#__PURE__*/_jsxDEV(GoChevronLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerLabel\",\n        onClick: () => handleClick(index),\n        children: [item.label, icon]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderedItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n}\n_s(Accordion, \"VGgwYDkzE0V3NPfFAbSlb4lQBfI=\");\n_c = Accordion;\nexport default Accordion;\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["useState","GoChevronDown","GoChevronLeft","jsxDEV","_jsxDEV","Accordion","items","_s","expandedIndex","setExpandedIndex","handleClick","nextIndex","renderedItems","map","item","index","isExpanded","icon","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","label","content","_c","$RefreshReg$"],"sources":["/Users/essamehdi/Projects/handcoded/expanding-states/src/components/Accordion.js"],"sourcesContent":["import { useState } from 'react';\nimport { GoChevronDown, GoChevronLeft } from 'react-icons/go';\n\nfunction Accordion({ items }) {\n  const [expandedIndex, setExpandedIndex] = useState(-1);\n\n  const handleClick = (nextIndex) => {\n    if (expandedIndex === nextIndex) {\n      setExpandedIndex(-1);\n    } else {\n      setExpandedIndex(nextIndex);\n    }\n  };\n\n  // arrow function to create list of  all the items to render with js\n  const renderedItems = items.map((item, index) => {\n    let isExpanded;\n    if (index === expandedIndex) {\n      isExpanded = true;\n    } else {\n      isExpanded = false;\n    }\n\n    let icon;\n\n    if (isExpanded) {\n      icon = <GoChevronDown />;\n    } else {\n      icon = <GoChevronLeft />;\n    }\n\n    return (\n      <div>\n        <div  className='headerLabel'\n          onClick={() => handleClick(index)}\n        > \n          {/* {item.id} */}\n          {item.label}\n          {icon}\n        </div>\n        {/* when item is expanded and item.content != NULL, render a div of content */}\n        {isExpanded && <div>{item.content}</div>}  \n      </div>\n    );\n  });\n\n  return <div>{renderedItems}</div>;\n}\n\nexport default Accordion;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,EAAEC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,SAASA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAMU,WAAW,GAAIC,SAAS,IAAK;IACjC,IAAIH,aAAa,KAAKG,SAAS,EAAE;MAC/BF,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM;MACLA,gBAAgB,CAACE,SAAS,CAAC;IAC7B;EACF,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGN,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC/C,IAAIC,UAAU;IACd,IAAID,KAAK,KAAKP,aAAa,EAAE;MAC3BQ,UAAU,GAAG,IAAI;IACnB,CAAC,MAAM;MACLA,UAAU,GAAG,KAAK;IACpB;IAEA,IAAIC,IAAI;IAER,IAAID,UAAU,EAAE;MACdC,IAAI,gBAAGb,OAAA,CAACH,aAAa;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC1B,CAAC,MAAM;MACLJ,IAAI,gBAAGb,OAAA,CAACF,aAAa;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC1B;IAEA,oBACEjB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAMmB,SAAS,EAAC,aAAa;QAC3BC,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAACK,KAAK,CAAE;QAAAO,QAAA,GAGjCR,IAAI,CAACW,KAAK,EACVR,IAAI;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,EAELL,UAAU,iBAAIZ,OAAA;QAAAkB,QAAA,EAAMR,IAAI,CAACY;MAAO;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAEV,CAAC,CAAC;EAEF,oBAAOjB,OAAA;IAAAkB,QAAA,EAAMV;EAAa;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACnC;AAACd,EAAA,CA5CQF,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AA8ClB,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}