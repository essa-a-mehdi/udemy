{"ast":null,"code":"var _jsxFileName = \"/Users/essamehdi/Projects/handcoded/udemy/custom-navbar/src/context/navigation.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavigationContext = /*#__PURE__*/createContext();\nfunction NavigationProivder({\n  children\n}) {\n  _s();\n  // Set a state to cause a re-render whenever the forward and back button is clicked\n  // This would cause path to change hence use path to check when state is changed\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\n\n  // Handle back and forth buttons with popstate which is generated from pushstate function\n  useEffect(() => {\n    const handler = () => {\n      setCurrentPath(window.location.pathname);\n    };\n    window.addEventListener('popstate', handler);\n    return () => {\n      window.removeEventListener('popstate', handler);\n    };\n  }, []);\n\n  // allow navigation with pushtstate and then update the path to cuase re-render\n  const navigate = to => {\n    // to is the path we will navigate to like '/dropdown'\n    window.history.pushState({}, '', to);\n    setCurrentPath(to);\n  };\n  // given navigation context to all files into app\n  return /*#__PURE__*/_jsxDEV(NavigationContext.Provider, {\n    value: {\n      currentPath,\n      navigate\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n}\n_s(NavigationProivder, \"cTW2cqj/hmHGzdDpGoEziN+i5CA=\");\n_c = NavigationProivder;\nexport { NavigationProivder };\nexport default NavigationContext;\nvar _c;\n$RefreshReg$(_c, \"NavigationProivder\");","map":{"version":3,"names":["useEffect","useState","createContext","jsxDEV","_jsxDEV","NavigationContext","NavigationProivder","children","_s","currentPath","setCurrentPath","window","location","pathname","handler","addEventListener","removeEventListener","navigate","to","history","pushState","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/essamehdi/Projects/handcoded/udemy/custom-navbar/src/context/navigation.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { createContext } from \"react\";\n\nconst NavigationContext = createContext();\n\nfunction NavigationProivder({children}) {\n    // Set a state to cause a re-render whenever the forward and back button is clicked\n    // This would cause path to change hence use path to check when state is changed\n    const [currentPath, setCurrentPath] = useState(window.location.pathname);\n\n\n    // Handle back and forth buttons with popstate which is generated from pushstate function\n    useEffect(() => {\n        const handler = () => {\n            setCurrentPath(window.location.pathname);\n        };\n        window.addEventListener('popstate', handler);\n\n        return () => {\n            window.removeEventListener('popstate', handler);\n        };\n    }, [])\n\n    // allow navigation with pushtstate and then update the path to cuase re-render\n    const navigate = (to) => {\n        // to is the path we will navigate to like '/dropdown'\n        window.history.pushState({}, '', to);\n        setCurrentPath(to);\n\n    }\n    // given navigation context to all files into app\n    return <NavigationContext.Provider value={{ currentPath, navigate }}>\n        {children}\n    </NavigationContext.Provider>\n}\n\nexport { NavigationProivder };\nexport default NavigationContext;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,iBAAiB,gBAAGH,aAAa,CAAC,CAAC;AAEzC,SAASI,kBAAkBA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACpC;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAACU,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC;;EAGxE;EACAb,SAAS,CAAC,MAAM;IACZ,MAAMc,OAAO,GAAGA,CAAA,KAAM;MAClBJ,cAAc,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC;IAC5C,CAAC;IACDF,MAAM,CAACI,gBAAgB,CAAC,UAAU,EAAED,OAAO,CAAC;IAE5C,OAAO,MAAM;MACTH,MAAM,CAACK,mBAAmB,CAAC,UAAU,EAAEF,OAAO,CAAC;IACnD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,QAAQ,GAAIC,EAAE,IAAK;IACrB;IACAP,MAAM,CAACQ,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,EAAEF,EAAE,CAAC;IACpCR,cAAc,CAACQ,EAAE,CAAC;EAEtB,CAAC;EACD;EACA,oBAAOd,OAAA,CAACC,iBAAiB,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,WAAW;MAAEQ;IAAS,CAAE;IAAAV,QAAA,EAC/DA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AACjC;AAAClB,EAAA,CA7BQF,kBAAkB;AAAAqB,EAAA,GAAlBrB,kBAAkB;AA+B3B,SAASA,kBAAkB;AAC3B,eAAeD,iBAAiB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}